<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <!-- Random social interactions -->

  <InteractionDef>
    <defName>PrudeSeen</defName>
    <label>saw naked</label>
    <workerClass>Psychology.InteractionWorker_PrudeSeen</workerClass>
    <symbol>Things/Mote/SpeechSymbols/DeepTalk</symbol>
    <initiatorThought>PrudeSeen</initiatorThought>
    <socialFightBaseChance>0.005</socialFightBaseChance>
    <logRulesInitiator>
      <rulesStrings>
        <li>r_logentry->[INITIATOR_nameDef] saw [RECIPIENT_nameDef] in the nude.</li>
      </rulesStrings>
    </logRulesInitiator>
  </InteractionDef>
  
  <InteractionDef>
    <defName>Conversation</defName>
    <label>conversation</label>
    <workerClass>Psychology.InteractionWorker_Conversation</workerClass>
    <symbol>Things/Mote/SpeechSymbols/DeepTalk</symbol>
    <logRulesInitiator>
      <rulesStrings>
        <li>r_logentry(p=4)->[INITIATOR_nameDef] [conversed] with [RECIPIENT_nameDef].</li>
        <li>r_logentry->[INITIATOR_nameDef] hailed [RECIPIENT_nameDef] for a conversation.</li>
        <li>r_logentry->[INITIATOR_nameDef] brought up a topic with [RECIPIENT_nameDef].</li>
		
        <li>conversed(p=4)->struck up a conversation</li>
        <li>conversed->started to talk</li>
        <li>conversed->got into a chat</li>
        <li>conversed->brought up a topic</li>
        <li>conversed->started discussing something</li>
      </rulesStrings>
    </logRulesInitiator>
  </InteractionDef>
  
  <InteractionDef>
    <defName>EndConversation</defName>
    <label>ended conversation</label>
    <workerClass>InteractionWorker_DeepTalk</workerClass> <!-- This will prevent them from actually doing it.-->
    <symbol>Things/Mote/SpeechSymbols/Conversation</symbol>
    <logRulesInitiator>
      <rulesStrings>
        <li>r_logentry->[INITIATOR_nameDef] ended a conversation with [RECIPIENT_nameDef].</li>
      </rulesStrings>
    </logRulesInitiator>
  </InteractionDef>
  
  <RulePackDef>
    <defName>Sentence_SocialFightConvoInitiatorStarted</defName>
    <rulePack>
      <rulesStrings>
        <li>sent->Their differences escalated until [INITIATOR_nameDef] started a fight!</li>
      </rulesStrings>
    </rulePack>
  </RulePackDef>
  
  <RulePackDef>
    <defName>Sentence_SocialFightConvoRecipientStarted</defName>
    <rulePack>
      <rulesStrings>
        <li>sent->Their differences escalated until [RECIPIENT_nameDef] started a fight!</li>
      </rulesStrings>
    </rulePack>
  </RulePackDef>
  
  <InteractionDef>
    <defName>HangOut</defName>
    <label>hanging out</label>
    <workerClass>Psychology.InteractionWorker_HangOut</workerClass>
    <symbol>Things/Mote/SpeechSymbols/HangOut</symbol>
    <logRulesInitiator>
      <rulesStrings>
        <li>r_logentry->[INITIATOR_nameDef] asked [RECIPIENT_nameDef] to hang out with [INITIATOR_objective].</li>
      </rulesStrings>
    </logRulesInitiator>
  </InteractionDef>
  
  <InteractionDef>
    <defName>PlanDate</defName>
    <label>planning a date</label>
    <workerClass>Psychology.InteractionWorker_PlanDate</workerClass>
    <symbol>Things/Mote/Heart</symbol>
    <logRulesInitiator>
      <rulesStrings>
        <li>r_logentry->[INITIATOR_nameDef] planned a date with [RECIPIENT_nameDef].</li>
      </rulesStrings>
    </logRulesInitiator>
  </InteractionDef>
  
  
  <!--<InteractionDef>
    <defName>TourFinished</defName>
    <label>finished tour</label>
    <symbol>Things/Mote/SpeechSymbols/PrisonerRecruit</symbol>
    <workerClass>InteractionWorker_DeepTalk</workerClass>
    <initiatorXpGainSkill>Social</initiatorXpGainSkill>
    <initiatorXpGainAmount>0</initiatorXpGainAmount>
    <logRulesInitiator>
      <rulesStrings>
        <li>logentry->Showed [other_nameShortIndef] around the colony and offered to let them join.</li>
      </rulesStrings>
    </logRulesInitiator>
  </InteractionDef>-->
  
</Defs>